[{"D:\\React app's\\ceramic_tile\\src\\index.js":"1","D:\\React app's\\ceramic_tile\\src\\App.js":"2","D:\\React app's\\ceramic_tile\\src\\components\\Sales.js":"3","D:\\React app's\\ceramic_tile\\src\\components\\Dashboard.js":"4","D:\\React app's\\ceramic_tile\\src\\components\\Add_product.js":"5","D:\\React app's\\ceramic_tile\\src\\components\\history.js":"6","D:\\React app's\\ceramic_tile\\src\\firebase.js":"7"},{"size":572,"mtime":1623694301925,"results":"8","hashOfConfig":"9"},{"size":4305,"mtime":1623722447622,"results":"10","hashOfConfig":"9"},{"size":2452,"mtime":1623695588969,"results":"11","hashOfConfig":"9"},{"size":3296,"mtime":1621861932359,"results":"12","hashOfConfig":"9"},{"size":3947,"mtime":1623692605629,"results":"13","hashOfConfig":"9"},{"size":249,"mtime":1623406928703,"results":"14","hashOfConfig":"9"},{"size":413,"mtime":1621863077511,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"m2z890",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\React app's\\ceramic_tile\\src\\index.js",[],["32","33"],"D:\\React app's\\ceramic_tile\\src\\App.js",["34"],"D:\\React app's\\ceramic_tile\\src\\components\\Sales.js",["35","36","37","38"],"import React, {useState} from \"react\";\r\nimport {Button, Card, Grid, Icon, makeStyles, TextField, Typography} from \"@material-ui/core\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        transition: \"transform 0.15s ease-in-out\"\r\n    },\r\n    cardHovered: {\r\n        transform: \"scale3d(1.05, 1.05, 1)\"\r\n    }\r\n});\r\n\r\nconst Tiles = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        raised:false,\r\n        shadow:1,\r\n    })\r\n    return (\r\n        <div className=\"col-3\">\r\n            <div className=\"tile\">\r\n                <Card elevation={5} style={{padding: 8, marginBottom: 24, backgroundColor: '#f8f1f1'}}\r\n                      classes={{root: state.raised ? classes.cardHovered : \"\"}}\r\n                      onMouseOver={()=>setState({ raised: true, shadow:5})}\r\n                      onMouseOut={()=>setState({ raised:false, shadow:1 })}\r\n                      raised={state.raised} zdepth={state.shadow}\r\n                >\r\n                    <div>\r\n                        <img src={props.tile.image} style={{width: \"100px\"}}/>\r\n                    </div>\r\n                    <div>\r\n                        <Typography>{props.tile.name} </Typography>\r\n                        <div>Количество на складе: {props.tile.count} шт</div>\r\n                        <div>Цена за 1 шт: {props.tile.price} сом</div>\r\n                    </div>\r\n                    <div>\r\n                        <TextField fullWidth size='small' type='number'  id=\"outlined-basic\" label=\"Введите количество\" variant=\"outlined\" />\r\n                        <Button\r\n                            className={'mt-2'}\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            endIcon={<SendIcon/>}\r\n                        >Оформить заказ</Button>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Sales = (props) => {\r\n\r\n    const {warehouse} = props;\r\n    const {products} = props;\r\n\r\n    let tilesElements = products.map(t => <Tiles tile={t}/>);\r\n\r\n    return (\r\n        <div className={\"container my-5\"}>\r\n            <div className={\"row\"}>\r\n                {tilesElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sales;\r\n","D:\\React app's\\ceramic_tile\\src\\components\\Dashboard.js",[],"D:\\React app's\\ceramic_tile\\src\\components\\Add_product.js",[],"D:\\React app's\\ceramic_tile\\src\\components\\history.js",[],"D:\\React app's\\ceramic_tile\\src\\firebase.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":89,"column":49,"nodeType":"45","endLine":89,"endColumn":63},{"ruleId":"46","severity":1,"message":"47","line":2,"column":23,"nodeType":"48","messageId":"49","endLine":2,"endColumn":27},{"ruleId":"46","severity":1,"message":"50","line":2,"column":29,"nodeType":"48","messageId":"49","endLine":2,"endColumn":33},{"ruleId":"51","severity":1,"message":"52","line":31,"column":25,"nodeType":"45","endLine":31,"endColumn":79},{"ruleId":"46","severity":1,"message":"53","line":56,"column":12,"nodeType":"48","messageId":"49","endLine":56,"endColumn":21},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react/jsx-pascal-case","Imported JSX component Add_product must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'warehouse' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]