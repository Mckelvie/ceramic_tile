[{"D:\\React app's\\ceramic_tile\\src\\index.js":"1","D:\\React app's\\ceramic_tile\\src\\App.js":"2","D:\\React app's\\ceramic_tile\\src\\components\\Sales.js":"3","D:\\React app's\\ceramic_tile\\src\\components\\Dashboard.js":"4","D:\\React app's\\ceramic_tile\\src\\components\\Add_product.js":"5","D:\\React app's\\ceramic_tile\\src\\components\\history.js":"6"},{"size":492,"mtime":1621864886645,"results":"7","hashOfConfig":"8"},{"size":3353,"mtime":1623406986549,"results":"9","hashOfConfig":"8"},{"size":2457,"mtime":1621661827632,"results":"10","hashOfConfig":"8"},{"size":3296,"mtime":1621861932359,"results":"11","hashOfConfig":"8"},{"size":495,"mtime":1621865394639,"results":"12","hashOfConfig":"8"},{"size":249,"mtime":1623406928703,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"m2z890",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React app's\\ceramic_tile\\src\\index.js",[],["28","29"],"D:\\React app's\\ceramic_tile\\src\\App.js",["30","31","32"],"D:\\React app's\\ceramic_tile\\src\\components\\Sales.js",["33","34","35"],"import React, {useState} from \"react\";\r\nimport {Button, Card, Grid, Icon, makeStyles, TextField, Typography} from \"@material-ui/core\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        transition: \"transform 0.15s ease-in-out\"\r\n    },\r\n    cardHovered: {\r\n        transform: \"scale3d(1.05, 1.05, 1)\"\r\n    }\r\n});\r\n\r\nconst Tiles = (props) => {\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        raised:false,\r\n        shadow:1,\r\n    })\r\n    return (\r\n        <div className=\"col-3\">\r\n            <div className=\"tile\">\r\n                <Card elevation={5} style={{padding: 8, marginBottom: 24, backgroundColor: '#f8f1f1'}}\r\n                      classes={{root: state.raised ? classes.cardHovered : \"\"}}\r\n                      onMouseOver={()=>setState({ raised: true, shadow:5})}\r\n                      onMouseOut={()=>setState({ raised:false, shadow:1 })}\r\n                      raised={state.raised} zdepth={state.shadow}\r\n                >\r\n                    <div>\r\n                        <img src={props.tile.image} style={{width: \"100px\"}}/>\r\n                    </div>\r\n                    <div>\r\n                        <Typography>{props.tile.name} {props.tile.description.size}</Typography>\r\n                        <div>Количество на складе: {props.tile.description.count} шт</div>\r\n                        <div>Цена за 1 шт: {props.tile.price} сом</div>\r\n                    </div>\r\n                    <div>\r\n                        <TextField fullWidth size='small' type='number'  id=\"outlined-basic\" label=\"Введите количество\" variant=\"outlined\" />\r\n                        <Button\r\n                            className={'mt-2'}\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            endIcon={<SendIcon/>}\r\n                        >Оформить заказ</Button>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Sales = (props) => {\r\n    const {warehouse} = props;\r\n\r\n    let tilesElements = warehouse.map(t => <Tiles tile={t}/>);\r\n    return (\r\n        <div className={\"container my-5\"}>\r\n            <div className={\"row\"}>\r\n                {tilesElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sales;\r\n","D:\\React app's\\ceramic_tile\\src\\components\\Dashboard.js",[],"D:\\React app's\\ceramic_tile\\src\\components\\Add_product.js",[],"D:\\React app's\\ceramic_tile\\src\\components\\history.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":7,"column":8,"nodeType":"42","messageId":"43","endLine":7,"endColumn":16},{"ruleId":"44","severity":1,"message":"45","line":30,"column":29,"nodeType":"46","endLine":31,"endColumn":145},{"ruleId":"47","severity":1,"message":"48","line":66,"column":42,"nodeType":"46","endLine":66,"endColumn":56},{"ruleId":"40","severity":1,"message":"49","line":2,"column":23,"nodeType":"42","messageId":"43","endLine":2,"endColumn":27},{"ruleId":"40","severity":1,"message":"50","line":2,"column":29,"nodeType":"42","messageId":"43","endLine":2,"endColumn":33},{"ruleId":"44","severity":1,"message":"45","line":30,"column":25,"nodeType":"46","endLine":30,"endColumn":79},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'SendIcon' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component Add_product must be in PascalCase or SCREAMING_SNAKE_CASE","'Grid' is defined but never used.","'Icon' is defined but never used.","no-global-assign","no-unsafe-negation"]